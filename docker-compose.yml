version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: investor-postgres
    environment:
      POSTGRES_DB: investor_shiksha
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - investor-network

  redis:
    image: redis:7-alpine
    container_name: investor-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - investor-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: investor-backend
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/investor_shiksha
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-jwt-secret-key
      JWT_REFRESH_SECRET: your-jwt-refresh-secret
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - investor-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: investor-frontend
    ports:
      - "3000:3000"
    environment:
      VITE_API_URL: http://localhost:3001/api
      VITE_WS_URL: ws://localhost:3001
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - investor-network

  ai-services:
    build:
      context: ./ai-services
      dockerfile: Dockerfile
    container_name: investor-ai
    ports:
      - "5000:5000"
    environment:
      FLASK_ENV: development
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/investor_shiksha
      REDIS_URL: redis://redis:6379
      OPENAI_API_KEY: your-openai-key
      GOOGLE_TRANSLATE_KEY: your-google-translate-key
    depends_on:
      - postgres
      - redis
    volumes:
      - ./ai-services:/app
    networks:
      - investor-network

  nginx:
    image: nginx:alpine
    container_name: investor-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - investor-network

volumes:
  postgres_data:
  redis_data:

networks:
  investor-network:
    driver: bridge
